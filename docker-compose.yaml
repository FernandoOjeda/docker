version: "3"

services:
    nodeapp:
        image: mynodetest:v0.1
        build: 
            context: .
            dockerfile: multistage.Dockerfile
        ports: 
            - "9001:8001"
        networks: 
            - sonarnet
        volumes: 
            - app_volume:/app
    sonarqube:
        image: sonarqube:8.2-community
        depends_on:
            - db
        ports:
            - "9000:9000"
        networks:
            - sonarnet
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
            - sonarqube_temp:/opt/sonarqube/temp
    db:
        image: postgres
        networks:
            - sonarnet
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
        volumes:
            - postgresql:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data
    jenkins:
        user: root
        image: jenkins/Jenkins
        ports:
            - "8080:8080"
        volumes:
            - ./jenkins_home:/var/jenkins_home
            - /usr/local/bin/docker:/usr/bin/docker
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - sonarnet
    nexus:
        image: sonatype/nexus3
        volumes:
            - "nexus-data:/nexus-data"
        ports:
            - "8081:8081"
        networks:
            - sonarnet

networks:
  sonarnet:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  postgresql:
  postgresql_data:
  nexus-data: {}
  app_volume:
